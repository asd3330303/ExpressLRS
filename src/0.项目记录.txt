ELRS双子星gemini 双1W高频头
20240902 高频头解决接收机收不到信号问题，是因为esp32s3的usb没关掉导致，因为spi的cs口和usb口io脚相同
        debug细节
            发现代码里把ant2屏蔽掉只用ant1可以控制接收机；；；把ant1屏蔽掉只用ant2不行，测量nss2口电压一直是拉低的，要么是单片机的这个io口输出能力不行，要么是模块损坏；强烈怀疑是因为esp32s3的usb没关掉导致的
20240902 高频头解决使用backpack就不运行问题，因为有个检测io0的按钮逻辑，如果按下了就会触发特殊的背包升级模式，由于io0是led的pwm输出，所以有问题
            高频头功率测算
                gemini  1w      5v 1.8a
                        25mw    5v 1.5a
                单天线  1w      5v 0.9a
                wifi模式升级    5v 0.5a
        未解决，和接收机通讯不上
20240902 高频头按钮本来就是通的，log只在开机的时候通是因为crsf的初始化会导致串口0被占用；还未解决不知为啥注释掉backpack的json定义就能跑通，在setup里while 1也能正常显示
20240831 初步调通elrs源码在esp32s3上；还需要做：调整按钮参数、背包参数
20240819 收到pcb板子，焊接完成，代码esp32s3编译过了，但io啥的还没弄
20240807 高频头到遥控器的espnow调通；还需要做按键自动配对；可以进行pcb设计打样
    ESPNOW
        在 50hz情况下，最高丢3包，遥控器->接收机增加1.48ms延迟，接收机->遥控器增加1.11ms延迟，LUA脚本参数获取流畅度100%
        在100hz情况下，最高丢5包，遥控器->接收机增加1.43ms延迟，接收机->遥控器增加1.17ms延迟，LUA脚本参数获取流畅度70%
        在150hz情况下，最高丢8包，遥控器->接收机增加1.28ms延迟，接收机->遥控器增加1.24ms延迟，LUA脚本参数获取流畅度60%
        在250hz情况下，最高丢8包，遥控器->接收机增加1.33ms延迟，接收机->遥控器增加1.21ms延迟，LUA脚本参数获取流畅度20%
        在500hz情况下，最高丢13包，遥控器->接收机增加1.26ms延迟，接收机->遥控器增加1.73ms延迟，LUA脚本参数获取流畅度10%
        1s中因为遥控器espnow发送导致的15ms延迟有14次
        1s中因为接收espnow导致的15ms延迟有2次
20240806加入了espnow，遥控器到高频头部分调通了，但lua还是进入不了，不知道为什么
20240725把esp32的矩阵重新加上去发现没有丢包了，感觉是芯片内部的问题；
    有线转换
        400k的波特率最高支持250hz，设置最高500hz会丢2包
        在100hz情况下，遥控器->接收机增加810us延迟，接收机->遥控器增加9.3ms延迟
        在500hz情况下，遥控器->接收机增加810us延迟，接收机->遥控器增加1.33ms延迟
    接下来做的现在加esp now，之后逻辑分析仪看下实际延迟
20240723发现有一部分冲突原因是因为高频头一直给遥控器发同步指令，遥控器就增加一个回复，但这个回复会使得遥控器的两包距离很近导致和我们转发冲突，修复后成功率还是70%;
    通过把sport口tx后flush_port_input()去掉，使用sport口接收时帧过滤，将丢包率降为7%以下了；现在还存在的问题是sport口发送数据后接收的第一个包必丢包
    去掉5倍超时后 + sport口tx后flush_port_input()去掉，成功率又变成85%）;;;原因是只要高频头发送一个数据给sport口，我的esp32开发版在发送之后接收的第一包sport数据必丢
    需要实现esp32+8266实现esp now后才能画板子
20240722研究完成源码部份功率 + RGB灯 + tft屏幕 + 5向按钮的原理，可以实现1w高频头;;;还需要为啥包只有70%成功率，才可以进入画板子
20240719成功解析了s.port接口转uart代码，但遥控器显示通讯成功率只有70%，但遥控舵机、回传没问题，需要深入研究为啥
